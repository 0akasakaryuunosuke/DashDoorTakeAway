{"ast":null,"code":"export default {\n  name: \"Orders\",\n  data() {\n    return {\n      tableData: [],\n      // 所有的数据\n      businessList: [],\n      userList: [],\n      ordersItemList: [],\n      pageNum: 1,\n      // 当前的页码\n      pageSize: 10,\n      // 每页显示的个数\n      total: 0,\n      orderNo: null,\n      fromVisible: false,\n      fromVisible1: false,\n      form: {},\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\n      rules: {\n        name: [{\n          required: true,\n          message: '请输入名称',\n          trigger: 'blur'\n        }]\n      },\n      ids: [],\n      newOrder: null,\n      // 新订单数据\n      ws: null // WebSocket 实例\n    };\n  },\n\n  created() {\n    this.load(1);\n    this.$request.get('/user/selectAll').then(res => {\n      this.userList = res.data;\n    });\n    this.$request.get('/business/selectAll', {\n      params: {\n        status: '通过'\n      }\n    }).then(res => {\n      this.businessList = res.data;\n    });\n    // this.initWebSocket(); // 初始化 WebSocket\n  },\n\n  methods: {\n    // initWebSocket() {\n    //   const wsUrl = `ws://localhost:9090/ws/order`; // 替换为实际 WebSocket 地址\n    //   this.ws = new WebSocket(wsUrl);\n    //\n    //   this.ws.onopen = () => {\n    //     console.log(\"WebSocket 已连接\");\n    //   };\n    //   this.ws.onmessage = (event) => {\n    //  const orderData = JSON.parse(event.data); // 解析 JSON 数据\n    //     console.log(\"收到新订单消息:\", orderData)\n    //       // 当前商家 ID\n    //         const userData = localStorage.getItem('xm-user');\n    //     const userObject = JSON.parse(userData);\n    //     const userId = userObject.id;\n    //\n    //     console.log(\"当前商家ID:\",userId)\n    //     console.log(orderData.businessId)\n    //  if (orderData.businessId === userId&&userObject.role===\"BUSINESS\"){\n    //     // 假设消息是通知商家新订单支付完成\n    //       this.newOrder = \"你有新的订单，请及时处理\"; // 将消息保存到组件数据中显示\n    //       this.$notify({\n    //         title: \"新订单提醒\",\n    //         message: \"你有新的订单，请及时处理\",\n    //         type: \"success\",\n    //       });\n    //       this.playAudio();\n    //       this.load(1); // 刷新订单列表\n    //     }\n    //   };\n    //\n    //   this.ws.onerror = (error) => {\n    //     console.error(\"WebSocket 错误:\", error);\n    //   };\n    //\n    //   this.ws.onclose = () => {\n    //     console.log(\"WebSocket 已关闭\");\n    //   };\n    // },\n\n    // playAudio() {\n    //   const audio = new Audio(\"https://oss-jlx.oss-cn-beijing.aliyuncs.com/%E6%96%B0%E7%9A%84%E8%AE%A2%E5%8D%95%E6%9F%A5%E6%94%B6_%E8%80%B3%E8%81%86%E7%BD%91_%5B%E5%A3%B0%E9%9F%B3ID%EF%BC%9A35825%5D.mp3\"); // 替换为实际音频文件地址\n    //   audio.play().catch((error) => console.error(\"音频播放错误:\", error));\n    // },\n    sendGoods(row) {\n      // 发货\n      let form = JSON.parse(JSON.stringify(row)); // 深克隆拷贝   防止数据更新失败，表格显示有问题\n      form.status = '待收货';\n      this.$request.put('/orders/update', form).then(res => {\n        if (res.code === '200') {\n          // 表示成功保存\n          this.$message.success('操作成功');\n          this.load(1);\n        } else {\n          this.$message.error(res.msg); // 弹出错误的信息\n        }\n      });\n    },\n\n    loadDetail(orderId) {\n      this.$request.get('/ordersItem/selectAll', {\n        params: {\n          orderId: orderId\n        }\n      }).then(res => {\n        this.ordersItemList = res.data || [];\n        this.fromVisible1 = true; // 打开弹窗\n      });\n    },\n\n    handleAdd() {\n      // 新增数据\n      this.form = {}; // 新增数据的时候清空数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    handleEdit(row) {\n      // 编辑数据\n      this.form = JSON.parse(JSON.stringify(row)); // 给form对象赋值  注意要深拷贝数据\n      this.fromVisible = true; // 打开弹窗\n    },\n\n    save() {\n      // 保存按钮触发的逻辑  它会触发新增或者更新\n      this.$refs.formRef.validate(valid => {\n        if (valid) {\n          this.$request({\n            url: this.form.id ? '/orders/update' : '/orders/add',\n            method: this.form.id ? 'PUT' : 'POST',\n            data: this.form\n          }).then(res => {\n            if (res.code === '200') {\n              // 表示成功保存\n              this.$message.success('保存成功');\n              this.load(1);\n              this.fromVisible = false;\n            } else {\n              this.$message.error(res.msg); // 弹出错误的信息\n            }\n          });\n        }\n      });\n    },\n\n    del(id) {\n      // 单个删除\n      this.$confirm('您确定删除吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/' + id).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    handleSelectionChange(rows) {\n      // 当前选中的所有的行数据\n      this.ids = rows.map(v => v.id);\n    },\n    delBatch() {\n      // 批量删除\n      if (!this.ids.length) {\n        this.$message.warning('请选择数据');\n        return;\n      }\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {\n        type: \"warning\"\n      }).then(response => {\n        this.$request.delete('/orders/delete/batch', {\n          data: this.ids\n        }).then(res => {\n          if (res.code === '200') {\n            // 表示操作成功\n            this.$message.success('操作成功');\n            this.load(1);\n          } else {\n            this.$message.error(res.msg); // 弹出错误的信息\n          }\n        });\n      }).catch(() => {});\n    },\n    load(pageNum) {\n      // 分页查询\n      if (pageNum) this.pageNum = pageNum;\n      this.$request.get('/orders/selectPage', {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          orderNo: this.orderNo\n        }\n      }).then(res => {\n        this.tableData = res.data?.list;\n        this.total = res.data?.total;\n      });\n    },\n    reset() {\n      this.orderNo = null;\n      this.load(1);\n    },\n    handleCurrentChange(pageNum) {\n      this.load(pageNum);\n    }\n  }\n};","map":{"version":3,"names":["name","data","tableData","businessList","userList","ordersItemList","pageNum","pageSize","total","orderNo","fromVisible","fromVisible1","form","user","JSON","parse","localStorage","getItem","rules","required","message","trigger","ids","newOrder","ws","created","load","$request","get","then","res","params","status","methods","sendGoods","row","stringify","put","code","$message","success","error","msg","loadDetail","orderId","handleAdd","handleEdit","save","$refs","formRef","validate","valid","url","id","method","del","$confirm","type","response","delete","catch","handleSelectionChange","rows","map","v","delBatch","length","warning","list","reset","handleCurrentChange"],"sources":["src/views/manager/Orders.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"search\">\r\n      <el-input placeholder=\"请输入订单编号查询\" style=\"width: 200px\" v-model=\"orderNo\"></el-input>\r\n      <el-button type=\"info\" plain style=\"margin-left: 10px\" @click=\"load(1)\">查询</el-button>\r\n      <el-button type=\"warning\" plain style=\"margin-left: 10px\" @click=\"reset\">重置</el-button>\r\n    </div>\r\n\r\n    <div class=\"operation\" v-if=\"user.role === 'ADMIN'\">\r\n      <el-button type=\"danger\" plain @click=\"delBatch\">批量删除</el-button>\r\n    </div>\r\n\r\n    <div class=\"table\">\r\n      <el-table :data=\"tableData\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column type=\"selection\" width=\"55\" align=\"center\" v-if=\"user.role === 'ADMIN'\"></el-table-column>\r\n        <el-table-column prop=\"id\" label=\"序号\" width=\"70\" align=\"center\" sortable></el-table-column>\r\n        <el-table-column prop=\"orderNo\" label=\"订单编号\"></el-table-column>\r\n        <el-table-column prop=\"name\" label=\"订单名称\"></el-table-column>\r\n        <el-table-column prop=\"status\" label=\"订单状态\">\r\n          <template v-slot=\"scope\">\r\n            <el-tag type=\"danger\" v-if=\"scope.row.status === '已取消'\">已取消</el-tag>\r\n            <el-tag type=\"warning\" v-if=\"scope.row.status === '待支付'\">待支付</el-tag>\r\n            <el-tag type=\"primary\" v-if=\"scope.row.status === '待发货'\">待发货</el-tag>\r\n            <el-tag type=\"primary\" v-if=\"scope.row.status === '待收货'\">待收货</el-tag>\r\n            <el-tag type=\"info\" v-if=\"scope.row.status === '待评价'\">待评价</el-tag>\r\n            <el-tag type=\"success\" v-if=\"scope.row.status === '已完成'\">已完成</el-tag>\r\n            <el-tag type=\"red\" v-if=\"scope.row.status === '已退款'\">已退款</el-tag>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"businessName\" label=\"接单商家\"></el-table-column>\r\n        <el-table-column prop=\"address\" label=\"送货地址\"></el-table-column>\r\n        <el-table-column prop=\"phone\" label=\"下单人电话\"></el-table-column>\r\n        <el-table-column prop=\"userName\" label=\"下单人\"></el-table-column>\r\n        <el-table-column prop=\"amount\" label=\"订单总价\"></el-table-column>\r\n        <el-table-column prop=\"discount\" label=\"优惠金额\"></el-table-column>\r\n        <el-table-column prop=\"actual\" label=\"实付款\"></el-table-column>\r\n        <el-table-column prop=\"comment\" label=\"备注\"></el-table-column>\r\n        <el-table-column prop=\"time\" label=\"下单时间\"></el-table-column>\r\n        <el-table-column prop=\"payTime\" label=\"支付时间\"></el-table-column>\r\n        <el-table-column prop=\"payType\" label=\"支付类型\"></el-table-column>\r\n        <el-table-column label=\"详情\" align=\"center\" width=\"90\" fixed=\"right\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"loadDetail(scope.row.id)\">查看详情</el-button>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column label=\"操作\" align=\"center\" width=\"240\" fixed=\"right\">\r\n          <template v-slot=\"scope\">\r\n            <el-button size=\"mini\" type=\"info\" @click=\"sendGoods(scope.row)\" v-if=\"scope.row.status === '待发货'\">发货</el-button>\r\n            <el-button size=\"mini\" type=\"primary\" plain @click=\"handleEdit(scope.row)\" v-if=\"user.role === 'ADMIN'\">编辑</el-button>\r\n            <el-button size=\"mini\" type=\"danger\" plain @click=\"del(scope.row.id)\" v-if=\"user.role === 'ADMIN'\">删除</el-button>\r\n          </template>\r\n        </el-table-column>\r\n      </el-table>\r\n\r\n      <div class=\"pagination\">\r\n        <el-pagination\r\n            background\r\n            @current-change=\"handleCurrentChange\"\r\n            :current-page=\"pageNum\"\r\n            :page-sizes=\"[5, 10, 20]\"\r\n            :page-size=\"pageSize\"\r\n            layout=\"total, prev, pager, next\"\r\n            :total=\"total\">\r\n        </el-pagination>\r\n      </div>\r\n    </div>\r\n\r\n\r\n    <el-dialog title=\"订单管理\" :visible.sync=\"fromVisible\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-form :model=\"form\" label-width=\"100px\" style=\"padding-right: 50px\" :rules=\"rules\" ref=\"formRef\">\r\n        <el-form-item label=\"订单编号\" prop=\"orderNo\">\r\n          <el-input v-model=\"form.orderNo\" placeholder=\"订单编号\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"订单名称\" prop=\"name\">\r\n          <el-input v-model=\"form.name\" placeholder=\"订单名称\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"订单状态\" prop=\"status\">\r\n          <el-select style=\"width: 100%\" v-model=\"form.status\">\r\n            <el-option v-for=\"item in ['已取消', '待支付', '待发货', '待收货', '待评价', '已完成', '已退款']\" :key=\"item\" :value=\"item\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"下单时间\" prop=\"time\">\r\n          <el-date-picker disabled format=\"yyyy-MM-dd HH:mm:ss\" value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                          v-model=\"form.time\" style=\"width: 100%\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"支付时间\" prop=\"payTime\">\r\n          <el-date-picker disabled format=\"yyyy-MM-dd HH:mm:ss\" value-format=\"yyyy-MM-dd HH:mm:ss\"\r\n                          v-model=\"form.payTime\" style=\"width: 100%\"></el-date-picker>\r\n        </el-form-item>\r\n        <el-form-item label=\"支付类型\" prop=\"payType\">\r\n          <el-input v-model=\"form.payType\" placeholder=\"支付类型\" disabled></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"接单商家\" prop=\"managerId\">\r\n          <el-select style=\"width: 100%\" v-model=\"form.businessId\">\r\n            <el-option v-for=\"item in businessList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"送货地址\" prop=\"address\">\r\n          <el-input v-model=\"form.address\" placeholder=\"送货地址\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"下单人电话\" prop=\"phone\">\r\n          <el-input v-model=\"form.phone\" placeholder=\"下单人电话\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"下单人\" prop=\"userId\">\r\n          <el-select style=\"width: 100%\" v-model=\"form.userId\">\r\n            <el-option v-for=\"item in userList\" :key=\"item.id\" :value=\"item.id\" :label=\"item.name\"></el-option>\r\n          </el-select>\r\n        </el-form-item>\r\n        <el-form-item label=\"订单总价\" prop=\"amount\">\r\n          <el-input v-model=\"form.amount\" placeholder=\"订单总价\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"优惠金额\" prop=\"discount\">\r\n          <el-input v-model=\"form.discount\" placeholder=\"优惠金额\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"实付款\" prop=\"actual\">\r\n          <el-input v-model=\"form.actual\" placeholder=\"实付款\"></el-input>\r\n        </el-form-item>\r\n        <el-form-item label=\"备注\" prop=\"comment\">\r\n          <el-input v-model=\"form.comment\" placeholder=\"备注\"></el-input>\r\n        </el-form-item>\r\n      </el-form>\r\n\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button @click=\"fromVisible = false\">取 消</el-button>\r\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n\r\n    <el-dialog title=\"订单详情信息\" :visible.sync=\"fromVisible1\" width=\"40%\" :close-on-click-modal=\"false\" destroy-on-close>\r\n      <el-table :data=\"ordersItemList\" strip @selection-change=\"handleSelectionChange\">\r\n        <el-table-column prop=\"orderId\" label=\"订单ID\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"goodsName\" label=\"商品名称\"></el-table-column>\r\n        <el-table-column prop=\"goodsImg\" label=\"商品图片\">\r\n          <template v-slot=\"scope\">\r\n            <div style=\"display: flex; align-items: center\">\r\n              <el-image style=\"width: 40px; height: 40px;\" v-if=\"scope.row.goodsImg\"\r\n                        :src=\"scope.row.goodsImg\" :preview-src-list=\"[scope.row.goodsImg]\"></el-image>\r\n            </div>\r\n          </template>\r\n        </el-table-column>\r\n        <el-table-column prop=\"price\" label=\"商品价格\" align=\"center\"></el-table-column>\r\n        <el-table-column prop=\"num\" label=\"购买数量\" align=\"center\"></el-table-column>\r\n      </el-table>\r\n      <div slot=\"footer\" class=\"dialog-footer\">\r\n        <el-button type=\"primary\" @click=\"fromVisible1 = false\">确 定</el-button>\r\n      </div>\r\n    </el-dialog>\r\n <el-alert\r\n      v-if=\"newOrder\"\r\n      type=\"success\"\r\n      title=\"新订单提醒！\"\r\n      description=\"您有一个新的订单，请及时处理。\"\r\n      show-icon\r\n      @close=\"newOrder = null\"\r\n      closable\r\n      style=\"position: fixed; top: 20px; right: 20px; z-index: 1000;\"\r\n    >\r\n    </el-alert>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"Orders\",\r\n  data() {\r\n    return {\r\n      tableData: [],  // 所有的数据\r\n      businessList: [],\r\n      userList: [],\r\n      ordersItemList: [],\r\n      pageNum: 1,   // 当前的页码\r\n      pageSize: 10,  // 每页显示的个数\r\n      total: 0,\r\n      orderNo: null,\r\n      fromVisible: false,\r\n      fromVisible1: false,\r\n      form: {},\r\n      user: JSON.parse(localStorage.getItem('xm-user') || '{}'),\r\n      rules: {\r\n        name: [\r\n          {required: true, message: '请输入名称', trigger: 'blur'},\r\n        ],\r\n      },\r\n      ids: [],\r\n       newOrder: null, // 新订单数据\r\n      ws: null, // WebSocket 实例\r\n    }\r\n  },\r\n  created() {\r\n    this.load(1)\r\n\r\n    this.$request.get('/user/selectAll').then(res => {\r\n      this.userList = res.data\r\n    })\r\n\r\n    this.$request.get('/business/selectAll', {\r\n      params: {\r\n        status: '通过'\r\n      }\r\n    }).then(res => {\r\n      this.businessList = res.data\r\n    })\r\n    // this.initWebSocket(); // 初始化 WebSocket\r\n  },\r\n  methods: {\r\n// initWebSocket() {\r\n//   const wsUrl = `ws://localhost:9090/ws/order`; // 替换为实际 WebSocket 地址\r\n//   this.ws = new WebSocket(wsUrl);\r\n//\r\n//   this.ws.onopen = () => {\r\n//     console.log(\"WebSocket 已连接\");\r\n//   };\r\n//   this.ws.onmessage = (event) => {\r\n//  const orderData = JSON.parse(event.data); // 解析 JSON 数据\r\n//     console.log(\"收到新订单消息:\", orderData)\r\n//       // 当前商家 ID\r\n//         const userData = localStorage.getItem('xm-user');\r\n//     const userObject = JSON.parse(userData);\r\n//     const userId = userObject.id;\r\n//\r\n//     console.log(\"当前商家ID:\",userId)\r\n//     console.log(orderData.businessId)\r\n//  if (orderData.businessId === userId&&userObject.role===\"BUSINESS\"){\r\n//     // 假设消息是通知商家新订单支付完成\r\n//       this.newOrder = \"你有新的订单，请及时处理\"; // 将消息保存到组件数据中显示\r\n//       this.$notify({\r\n//         title: \"新订单提醒\",\r\n//         message: \"你有新的订单，请及时处理\",\r\n//         type: \"success\",\r\n//       });\r\n//       this.playAudio();\r\n//       this.load(1); // 刷新订单列表\r\n//     }\r\n//   };\r\n//\r\n//   this.ws.onerror = (error) => {\r\n//     console.error(\"WebSocket 错误:\", error);\r\n//   };\r\n//\r\n//   this.ws.onclose = () => {\r\n//     console.log(\"WebSocket 已关闭\");\r\n//   };\r\n// },\r\n\r\n    // playAudio() {\r\n    //   const audio = new Audio(\"https://oss-jlx.oss-cn-beijing.aliyuncs.com/%E6%96%B0%E7%9A%84%E8%AE%A2%E5%8D%95%E6%9F%A5%E6%94%B6_%E8%80%B3%E8%81%86%E7%BD%91_%5B%E5%A3%B0%E9%9F%B3ID%EF%BC%9A35825%5D.mp3\"); // 替换为实际音频文件地址\r\n    //   audio.play().catch((error) => console.error(\"音频播放错误:\", error));\r\n    // },\r\n    sendGoods(row) {  // 发货\r\n      let form = JSON.parse(JSON.stringify(row))  // 深克隆拷贝   防止数据更新失败，表格显示有问题\r\n      form.status = '待收货'\r\n      this.$request.put('/orders/update', form).then(res => {\r\n        if (res.code === '200') {  // 表示成功保存\r\n          this.$message.success('操作成功')\r\n          this.load(1)\r\n        } else {\r\n          this.$message.error(res.msg)  // 弹出错误的信息\r\n        }\r\n      })\r\n    },\r\n    loadDetail(orderId) {\r\n      this.$request.get('/ordersItem/selectAll', {\r\n        params: {\r\n          orderId: orderId\r\n        }\r\n      }).then(res => {\r\n        this.ordersItemList = res.data ||  []\r\n        this.fromVisible1 = true  // 打开弹窗\r\n      })\r\n    },\r\n    handleAdd() {   // 新增数据\r\n      this.form = {}  // 新增数据的时候清空数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    handleEdit(row) {   // 编辑数据\r\n      this.form = JSON.parse(JSON.stringify(row))  // 给form对象赋值  注意要深拷贝数据\r\n      this.fromVisible = true   // 打开弹窗\r\n    },\r\n    save() {   // 保存按钮触发的逻辑  它会触发新增或者更新\r\n      this.$refs.formRef.validate((valid) => {\r\n        if (valid) {\r\n          this.$request({\r\n            url: this.form.id ? '/orders/update' : '/orders/add',\r\n            method: this.form.id ? 'PUT' : 'POST',\r\n            data: this.form\r\n          }).then(res => {\r\n            if (res.code === '200') {  // 表示成功保存\r\n              this.$message.success('保存成功')\r\n              this.load(1)\r\n              this.fromVisible = false\r\n            } else {\r\n              this.$message.error(res.msg)  // 弹出错误的信息\r\n            }\r\n          })\r\n        }\r\n      })\r\n    },\r\n    del(id) {   // 单个删除\r\n      this.$confirm('您确定删除吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/orders/delete/' + id).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    handleSelectionChange(rows) {   // 当前选中的所有的行数据\r\n      this.ids = rows.map(v => v.id)\r\n    },\r\n    delBatch() {   // 批量删除\r\n      if (!this.ids.length) {\r\n        this.$message.warning('请选择数据')\r\n        return\r\n      }\r\n      this.$confirm('您确定批量删除这些数据吗？', '确认删除', {type: \"warning\"}).then(response => {\r\n        this.$request.delete('/orders/delete/batch', {data: this.ids}).then(res => {\r\n          if (res.code === '200') {   // 表示操作成功\r\n            this.$message.success('操作成功')\r\n            this.load(1)\r\n          } else {\r\n            this.$message.error(res.msg)  // 弹出错误的信息\r\n          }\r\n        })\r\n      }).catch(() => {\r\n      })\r\n    },\r\n    load(pageNum) {  // 分页查询\r\n      if (pageNum) this.pageNum = pageNum\r\n      this.$request.get('/orders/selectPage', {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n          orderNo: this.orderNo,\r\n        }\r\n      }).then(res => {\r\n        this.tableData = res.data?.list\r\n        this.total = res.data?.total\r\n      })\r\n    },\r\n    reset() {\r\n      this.orderNo = null\r\n      this.load(1)\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      this.load(pageNum)\r\n    },\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>\r\n"],"mappings":"AAmKA;EACAA,IAAA;EACAC,KAAA;IACA;MACAC,SAAA;MAAA;MACAC,YAAA;MACAC,QAAA;MACAC,cAAA;MACAC,OAAA;MAAA;MACAC,QAAA;MAAA;MACAC,KAAA;MACAC,OAAA;MACAC,WAAA;MACAC,YAAA;MACAC,IAAA;MACAC,IAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,KAAA;QACAlB,IAAA,GACA;UAAAmB,QAAA;UAAAC,OAAA;UAAAC,OAAA;QAAA;MAEA;MACAC,GAAA;MACAC,QAAA;MAAA;MACAC,EAAA;IACA;EACA;;EACAC,QAAA;IACA,KAAAC,IAAA;IAEA,KAAAC,QAAA,CAAAC,GAAA,oBAAAC,IAAA,CAAAC,GAAA;MACA,KAAA1B,QAAA,GAAA0B,GAAA,CAAA7B,IAAA;IACA;IAEA,KAAA0B,QAAA,CAAAC,GAAA;MACAG,MAAA;QACAC,MAAA;MACA;IACA,GAAAH,IAAA,CAAAC,GAAA;MACA,KAAA3B,YAAA,GAAA2B,GAAA,CAAA7B,IAAA;IACA;IACA;EACA;;EACAgC,OAAA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA;;IAEA;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACAC,UAAAC,GAAA;MAAA;MACA,IAAAvB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAsB,SAAA,CAAAD,GAAA;MACAvB,IAAA,CAAAoB,MAAA;MACA,KAAAL,QAAA,CAAAU,GAAA,mBAAAzB,IAAA,EAAAiB,IAAA,CAAAC,GAAA;QACA,IAAAA,GAAA,CAAAQ,IAAA;UAAA;UACA,KAAAC,QAAA,CAAAC,OAAA;UACA,KAAAd,IAAA;QACA;UACA,KAAAa,QAAA,CAAAE,KAAA,CAAAX,GAAA,CAAAY,GAAA;QACA;MACA;IACA;;IACAC,WAAAC,OAAA;MACA,KAAAjB,QAAA,CAAAC,GAAA;QACAG,MAAA;UACAa,OAAA,EAAAA;QACA;MACA,GAAAf,IAAA,CAAAC,GAAA;QACA,KAAAzB,cAAA,GAAAyB,GAAA,CAAA7B,IAAA;QACA,KAAAU,YAAA;MACA;IACA;;IACAkC,UAAA;MAAA;MACA,KAAAjC,IAAA;MACA,KAAAF,WAAA;IACA;;IACAoC,WAAAX,GAAA;MAAA;MACA,KAAAvB,IAAA,GAAAE,IAAA,CAAAC,KAAA,CAAAD,IAAA,CAAAsB,SAAA,CAAAD,GAAA;MACA,KAAAzB,WAAA;IACA;;IACAqC,KAAA;MAAA;MACA,KAAAC,KAAA,CAAAC,OAAA,CAAAC,QAAA,CAAAC,KAAA;QACA,IAAAA,KAAA;UACA,KAAAxB,QAAA;YACAyB,GAAA,OAAAxC,IAAA,CAAAyC,EAAA;YACAC,MAAA,OAAA1C,IAAA,CAAAyC,EAAA;YACApD,IAAA,OAAAW;UACA,GAAAiB,IAAA,CAAAC,GAAA;YACA,IAAAA,GAAA,CAAAQ,IAAA;cAAA;cACA,KAAAC,QAAA,CAAAC,OAAA;cACA,KAAAd,IAAA;cACA,KAAAhB,WAAA;YACA;cACA,KAAA6B,QAAA,CAAAE,KAAA,CAAAX,GAAA,CAAAY,GAAA;YACA;UACA;QACA;MACA;IACA;;IACAa,IAAAF,EAAA;MAAA;MACA,KAAAG,QAAA;QAAAC,IAAA;MAAA,GAAA5B,IAAA,CAAA6B,QAAA;QACA,KAAA/B,QAAA,CAAAgC,MAAA,qBAAAN,EAAA,EAAAxB,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAQ,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAd,IAAA;UACA;YACA,KAAAa,QAAA,CAAAE,KAAA,CAAAX,GAAA,CAAAY,GAAA;UACA;QACA;MACA,GAAAkB,KAAA,QACA;IACA;IACAC,sBAAAC,IAAA;MAAA;MACA,KAAAxC,GAAA,GAAAwC,IAAA,CAAAC,GAAA,CAAAC,CAAA,IAAAA,CAAA,CAAAX,EAAA;IACA;IACAY,SAAA;MAAA;MACA,UAAA3C,GAAA,CAAA4C,MAAA;QACA,KAAA3B,QAAA,CAAA4B,OAAA;QACA;MACA;MACA,KAAAX,QAAA;QAAAC,IAAA;MAAA,GAAA5B,IAAA,CAAA6B,QAAA;QACA,KAAA/B,QAAA,CAAAgC,MAAA;UAAA1D,IAAA,OAAAqB;QAAA,GAAAO,IAAA,CAAAC,GAAA;UACA,IAAAA,GAAA,CAAAQ,IAAA;YAAA;YACA,KAAAC,QAAA,CAAAC,OAAA;YACA,KAAAd,IAAA;UACA;YACA,KAAAa,QAAA,CAAAE,KAAA,CAAAX,GAAA,CAAAY,GAAA;UACA;QACA;MACA,GAAAkB,KAAA,QACA;IACA;IACAlC,KAAApB,OAAA;MAAA;MACA,IAAAA,OAAA,OAAAA,OAAA,GAAAA,OAAA;MACA,KAAAqB,QAAA,CAAAC,GAAA;QACAG,MAAA;UACAzB,OAAA,OAAAA,OAAA;UACAC,QAAA,OAAAA,QAAA;UACAE,OAAA,OAAAA;QACA;MACA,GAAAoB,IAAA,CAAAC,GAAA;QACA,KAAA5B,SAAA,GAAA4B,GAAA,CAAA7B,IAAA,EAAAmE,IAAA;QACA,KAAA5D,KAAA,GAAAsB,GAAA,CAAA7B,IAAA,EAAAO,KAAA;MACA;IACA;IACA6D,MAAA;MACA,KAAA5D,OAAA;MACA,KAAAiB,IAAA;IACA;IACA4C,oBAAAhE,OAAA;MACA,KAAAoB,IAAA,CAAApB,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}